import{c as l,r as e}from"./client-39e4e055.js";/* empty css              */import{t as n,h as c}from"./DividerBox-7204cc2d.js";import{D as o}from"./DockLayout-4507fc78.js";let t={title:"cached",cached:!0,content:e.createElement("div",null,e.createElement("p",null,"cached = true"),e.createElement("p",null,"React component in this tab will keep its internal state when dragged around"),e.createElement("input",null))},a={title:"lose state",content:e.createElement("div",null,e.createElement("p",null,"By default, React won't reuse component if it moves out from its parent"),e.createElement("p",{style:{color:"red"}},"This input might lose its state when dragged around"),e.createElement("input",null))},r={title:"other method",content:e.createElement("div",null,e.createElement("p",null,"Other methods can also be used to achieve this"),e.createElement("ul",null,e.createElement("li",null,"React Context is an easier way if the state can be stored globally, check the tab-update example"),e.createElement("li",null,"Store state inside TabData is also possible, check adv-save-layout example")))},i={dockbox:{mode:"vertical",children:[{tabs:[{...t,id:"cache1"},{...t,id:"cache2"},n,c]},{tabs:[{...a,id:"nocache1"},{...a,id:"nocache2"}]},{tabs:[{...r,id:"comment"}]}]}};class s extends e.Component{render(){return e.createElement(o,{defaultLayout:i,style:{position:"absolute",left:10,top:10,right:10,bottom:10}})}}l(document.getElementById("app")).render(e.createElement(e.StrictMode,null,e.createElement(s,null)));
