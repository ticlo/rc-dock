import{c as o,r as t}from"./client-39e4e055.js";/* empty css              */import{t as c,h as s}from"./DividerBox-ceca883c.js";import{D as u}from"./DockLayout-9a27727e.js";let r={locked:{floatable:!1,tabLocked:!0}};function a(l,e){return{id:l,content:t.createElement("div",null,t.createElement("p",null,"It's easier to use React Context to update tab,",t.createElement("br",null),"but in some use cases you might need to directly update the tab."),l!==`tab${e}`?t.createElement("p",null,"Only current active tab will be changed"):null,"value is ",e),title:l,group:"locked"}}class i extends t.Component{constructor(){super(...arguments),this.getRef=e=>{this.dockLayout=e},this.count=4,this.addValue=()=>{let n=this.dockLayout.find("my_panel").activeId;this.dockLayout.updateTab(n,a(n,++this.count))},this.addTab=()=>{++this.count;let e=a(`tab${this.count}`,this.count);this.dockLayout.dockMove(e,"my_panel","middle")},this.defaultLayout={dockbox:{mode:"vertical",children:[{tabs:[{id:"id2",title:"change",content:t.createElement("div",null,t.createElement("p",null,"Click here to change the other panel."),t.createElement("button",{className:"btn",onClick:this.addValue},"Update Value"),t.createElement("button",{className:"btn",onClick:this.addTab},"Add Tab"))},c,s]},{id:"my_panel",tabs:[a("tab1",1),a("tab2",2),a("tab3",3),a("tab4",4)]}]}},this.state={saved:null}}render(){return t.createElement(u,{ref:this.getRef,defaultLayout:this.defaultLayout,groups:r,style:{position:"absolute",left:10,top:10,right:10,bottom:10}})}}o(document.getElementById("app")).render(t.createElement(t.StrictMode,null,t.createElement(i,null)));
